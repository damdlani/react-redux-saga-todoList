{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/styled.js","Header/index.js","Footer/styled.js","Footer/index.js","Container/styled.js","Container/index.js","useLocalStorageState.js","App.js","useTasks.js","serviceWorker.js","index.js"],"names":["StyledForm","styled","form","Input","input","Button","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","inputFocus","current","focus","onSubmit","event","preventDefault","trimmedTaskContent","trim","autoFocus","type","placeholder","ref","value","onChange","target","List","ul","ListItem","hidden","css","check","remove","Span","span","done","Tasks","tasks","hideDone","toggleTaskDone","removeTask","map","task","key","id","onClick","className","content","ButtonsBox","div","Buttons","toggleHideDone","setEachDone","length","disabled","every","StyledSection","section","Header","Title","h2","TasksWrapper","Section","title","body","extraContent","StyledTitle","h1","StyledFooter","footer","Footer","Wrapper","Container","children","useLocalStorageState","keyName","initialValue","localStorageState","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","App","setTasks","setHideDone","filter","useTasks","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9cbacf68.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StyledForm = styled.form`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    background-color: white;\r\n    padding: 30px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    flex-grow: 5;\r\n    margin: 5px;\r\n    padding: 5px 5px 5px 10px;\r\n\r\n    @media (max-width: 330px) {\r\n        &::placeholder {\r\n            font-size: 14px;\r\n        }\r\n    }\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 10px 20px;\r\n    margin: 5px;\r\n    background-color: teal;\r\n    border: none;\r\n    color: white;\r\n    font-size: 16px;\r\n    transition: .3s;\r\n    \r\n    &:hover {\r\n    cursor: pointer;\r\n    color: #ddd;\r\n    transform: scale(1.05)\r\n    }\r\n\r\n    &:active {\r\n    color: black;\r\n    outline: none;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n    }\r\n`;","import React, { useState, useRef} from \"react\"\r\nimport { StyledForm, Input, Button } from './styled';\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n    const inputRef = useRef(null);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const trimmedTaskContent = newTaskContent.trim();\r\n        if (trimmedTaskContent === \"\"){\r\n            return\r\n        };\r\n        addNewTask(trimmedTaskContent);\r\n        setNewTaskContent(\"\");\r\n        inputFocus();\r\n    };\r\n    const changeNewTaskContent = (event) => {\r\n        setNewTaskContent(event.target.value)\r\n    };\r\n    const inputFocus = () => {\r\n        inputRef.current.focus();\r\n    };\r\n\r\n    return <StyledForm\r\n        onSubmit={onFormSubmit}\r\n    >\r\n        <Input\r\n            autoFocus\r\n            type=\"text\"\r\n            placeholder=\"Co jest do zrobienia?\"\r\n            ref={inputRef}\r\n            value={newTaskContent}\r\n            onChange={changeNewTaskContent}\r\n        />\r\n        <Button\r\n        >\r\n            Dodaj zadanie\r\n        </Button>\r\n    </StyledForm>\r\n};\r\n\r\nexport default Form;","import styled, { css } from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n    padding: 30px;\r\n    margin: 0;\r\n    list-style: none;\r\n\r\n    @media (max-width: 768px) {\r\n        padding: 5px;\r\n    }\r\n`;\r\n\r\nexport const ListItem = styled.ul`\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 15px 10px;\r\n    margin: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n\r\n    ${({hidden}) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    flex-shrink: 0;\r\n    flex-basis: 40px;\r\n    align-self: center;\r\n    height: 40px;\r\n    padding: 10px;\r\n    border: none;\r\n    outline: none;\r\n    transition: .3s;\r\n\r\n    @media (max-width: 400px) {\r\n        flex-basis: 30px;\r\n        height: 30px;\r\n        font-size: 10px;\r\n    }\r\n\r\n    &:focus {\r\n    outline: solid black 1px;\r\n    }\r\n\r\n    &:hover {\r\n    cursor: pointer;\r\n    }\r\n\r\n    ${({check}) => check && css`\r\n        background-color: rgb(5, 104, 10);\r\n\r\n        &:hover {\r\n            background-color: hsl(123, 91%, 25%);\r\n        }\r\n    `}\r\n\r\n    ${({remove}) => remove && css`\r\n        background-color: rgb(104, 5, 5);\r\n\r\n        &:hover {\r\n            background-color: hsl(0, 91%, 25%);\r\n        }    \r\n\r\n        @media (max-width: 400px) {\r\n            font-size: 12px;\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    text-align: justify;\r\n    padding: 5px 20px;\r\n    flex-grow: 1;\r\n    line-break: anywhere;\r\n    font-style: normal;\r\n\r\n    @media (max-width: 768px) {\r\n        padding: 10px;\r\n    }\r\n\r\n    ${({done}) => done && css`\r\n        text-decoration: line-through;\r\n        font-style: italic;\r\n    `}\r\n`;","import React from \"react\";\r\nimport { List, ListItem, Button, Span } from './styled';\r\n\r\nconst Tasks = ({tasks, hideDone, toggleTaskDone, removeTask}) => (\r\n    <List>\r\n        {tasks.map((task) => (\r\n            <ListItem \r\n                key={task.id}\r\n                hidden={task.done && hideDone}\r\n            >\r\n            <Button \r\n                check\r\n                onClick={() => {toggleTaskDone(task.id)}}\r\n            >\r\n            {task.done ? <i className=\"fas fa-check\"></i> : \"\"}\r\n            </Button>\r\n\r\n            <Span \r\n                done={task.done}\r\n            >\r\n            {task.content}\r\n            </Span>\r\n\r\n            <Button \r\n                remove\r\n                onClick={() => {removeTask(task.id)}}\r\n            >\r\n            <i className=\"fas fa-trash-alt\"></i>\r\n            </Button>\r\n            </ListItem>\r\n        ))}\r\n    </List>\r\n);\r\n\r\nexport default Tasks;","import styled from 'styled-components';\r\n\r\nexport const ButtonsBox = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    flex-grow: 1;\r\n    padding: 5px;\r\n    margin: 10px;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: hsl(180, 66%, 20%);\r\n    font-size: 18px;\r\n    transition: color .2s, transform .2s;\r\n\r\n    &:hover {\r\n        color: hsl(180, 66%, 40%);\r\n        cursor: pointer;\r\n    }\r\n\r\n    &:active {\r\n        transform: scale(0.9);\r\n        outline: none;\r\n    }\r\n\r\n    &:disabled {\r\n        color: hsl(0, 0%, 60%);\r\n        cursor: auto;\r\n    }\r\n\r\n    &:focus {\r\n        outline: none;\r\n        color: hsl(180, 66%, 40%);\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        padding: 10px;\r\n    }\r\n\r\n    @media (max-width: 400px) {\r\n        padding: 5px;\r\n        margin: 5px;\r\n    }\r\n`;","import React from \"react\"\r\nimport { ButtonsBox, Button } from './styled';\r\n\r\nconst Buttons = ({tasks, hideDone, toggleHideDone, setEachDone}) => {\r\n\tif (tasks.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\treturn (\r\n\t\t<ButtonsBox>\r\n\t\r\n\t\t\t<Button\r\n\t\t\tdisabled={tasks.every(({ done }) => done === false)}\r\n\t\t\tonClick={toggleHideDone}\r\n\t\t\t>\r\n\t\t\t\t{hideDone === false ? \"Ukryj ukończone\" : \"Pokaż wszystkie\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Button\r\n\t\t\tdisabled={tasks.every(({done}) => done)}\r\n\t\t\tonClick={setEachDone}\r\n\t\t\t>\r\n\t\t\t\tUkończ wszystkie\r\n\t\t\t</Button>\r\n\r\n\t\t</ButtonsBox>\t\r\n\t)\r\n};\r\nexport default Buttons;","import styled from 'styled-components';\r\n\r\nexport const StyledSection = styled.section`\r\n    padding: 10px;\r\n    margin: 10px 0;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n    display: flex;\r\n    margin: 0 0 3px;\r\n    background-color: white;\r\n\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    margin: 0 0 3px;\r\n    padding: 20px 30px;\r\n    background-color: white;\r\n    flex-grow: 1;\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 22px;\r\n    }\r\n`;\r\n\r\nexport const TasksWrapper = styled.div`\r\n    background-color: white;\r\n    font-style: italic;\r\n    font-size: 16px;\r\n    text-align: center;\r\n    padding: 20px;\r\n\r\n    @media (max-width: 400px) {\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { StyledSection, Header, Title, TasksWrapper } from './styled';\r\n\r\nconst Section = ({title, body, extraContent}) => (\r\n    <StyledSection>\r\n      <Header>\r\n        <Title>{title}</Title>                  \r\n        {extraContent}\r\n      </Header>\r\n      <TasksWrapper>\r\n      \t{body}\r\n      </TasksWrapper>\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;","import styled from 'styled-components';\r\n\r\nexport const StyledTitle = styled.h1`\r\n    padding: 0 10px;\r\n    margin: 0;\r\n    font-size: 40px;\r\n`;","import React from \"react\";\r\nimport { StyledTitle } from './styled';\r\n\r\nconst Header =  ({title}) => (\r\n    <header>\r\n        <StyledTitle>{title}</StyledTitle>\r\n    </header>\r\n);\r\n\r\nexport default Header; ","import styled from 'styled-components';\r\n\r\nexport const StyledFooter = styled.footer`\r\n    padding: 5px;\r\n    position: absolute;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 100%;\r\n    transform: translateY(-100%);\r\n    font-size: 12px;\r\n    text-align: center;\r\n`;","import React from 'react';\r\nimport { StyledFooter } from './styled';\r\n\r\nconst Footer = ({content}) => (\r\n    <StyledFooter>{content}</StyledFooter>\r\n);\r\n\r\nexport default Footer;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    max-width: 1000px;\r\n    min-height: 100vh;\r\n    padding: 40px 20px;\r\n    margin: 0 auto;\r\n`;","import React from 'react';\r\nimport { Wrapper } from './styled';\r\n\r\nconst Container = ({children}) => (\r\n    <Wrapper>\r\n        {children}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Container;","import { useState, useEffect } from 'react';\r\n\r\nexport const useLocalStorageState = (keyName, initialValue) => {\r\n    \r\n    const getInitialState = () => {\r\n        const localStorageState = localStorage.getItem(keyName);\r\n\r\n        if (localStorageState === null){\r\n            return initialValue;\r\n        }\r\n\r\n        return JSON.parse(localStorageState);\r\n    }\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(state));\r\n    }, [state]);\r\n\r\n    return [state, setState];\r\n};","import React, { useState, useEffect } from 'react';\nimport Form from './Form';\nimport Tasks from './Tasks';\nimport Buttons from './Buttons';\nimport Section from './Section';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Container from './Container';\nimport { useTasks } from './useTasks'\n\n\nfunction App() {\n  \n  const {\n    tasks,\n    hideDone,\n    setEachDone,\n    toggleTaskDone,\n    removeTask,\n    addNewTask,\n    toggleHideDone,\n  } = useTasks();\n\n  return (\n    <Container>\n        <Header title=\"Lista zadań\"/>\n        <Section \n            title=\"Dodaj nowe zadanie\"\n            body={\n            <Form \n            addNewTask={addNewTask}\n            />\n            }\n            />\n\n            <Section\n            title=\"Lista zadań\"\n            body={tasks.length !== 0 ? \n              <Tasks \n                tasks={tasks} \n                hideDone={hideDone} \n                toggleTaskDone={toggleTaskDone} \n                removeTask={removeTask}\n              />\n               : `Nie masz na razie żadnych zadań.`}\n            extraContent={\n            <Buttons \n              tasks={tasks} \n              hideDone={hideDone} \n              toggleHideDone={toggleHideDone} \n              setEachDone={setEachDone}\n            />\n            }\n            />\n        <Footer content=\"&copy;Krzysztof Kwieciński 2020\" />\n    </Container>\n  );\n}\n\nexport default App;\n","import { useLocalStorageState } from './useLocalStorageState';\r\n\r\n\r\nexport const useTasks = () => {  \r\n    const [tasks, setTasks] = useLocalStorageState(\"tasks\", [])\r\n    const [hideDone, setHideDone] = useLocalStorageState(\"hideDone\", false)\r\n\r\n    const setEachDone = () => {\r\n      setTasks(tasks => tasks.map(\r\n        task => ({...task, done: true})\r\n      ))\r\n    };\r\n  \r\n    const toggleTaskDone = (id) => {\r\n      setTasks(tasks => tasks.map(task => {\r\n        if(task.id === id) {\r\n          return {...task, done: !task.done};\r\n        }\r\n        \r\n        return task;\r\n  \r\n      }));\r\n    };\r\n  \r\n    const removeTask = (id) => {\r\n      setTasks(tasks => tasks.filter(\r\n        task => task.id !== id\r\n      ))\r\n    }\r\n  \r\n    const addNewTask = (content) => {\r\n      setTasks(tasks => [...tasks, {\r\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\r\n        content: content,\r\n        done: false\r\n        } \r\n      ]\r\n      )\r\n    } \r\n    const toggleHideDone = () => {\r\n      setHideDone(hideDone => !hideDone);    \r\n    };\r\n  \r\n    return {\r\n      tasks,\r\n      hideDone,\r\n      setEachDone,\r\n      toggleTaskDone,\r\n      removeTask,\r\n      addNewTask,\r\n      toggleHideDone,\r\n    };\r\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}